# vim ft=yaml

# After changing this file, check it on:
#   https://yaml-online-parser.appspot.com/

# See tools/travis/notes.txt for some guidelines
dist: xenial
language: python
services:
  - xvfb
cache:
  # See https://docs.travis-ci.com/user/caching/#pip-cache
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/sphinx
    - $HOME/.ccache
addons:
  apt:
    packages:
    - ccache
    - texlive
    - texlive-latex-extra
    - dvipng
    - optipng
    # this became necessary to use matplotlib and qt5.12
    # https://github.com/matplotlib/matplotlib/pull/13412
    - qtbase5-dev

stages:
    # Do the style check and a single test job, don't proceed if it fails
    - name: Initial tests
    # Do the rest of the tests
    - name: Comprehensive tests

env:
  global:
    - GH_REF: github.com/scikit-image/docs.git
    - secure: "Z8uxAGrFb6yNw/savI7YvA5/BfkVKVGD3HUkDSXamotJAvUKMjIlWnzLc7d9S7PY99FRENgRYaNw4fzZqwJ91hDITcl1/wk6ux1j778O8kUQZayzdqcJG8KpfBsy1vJ4fl4uDGlSmUP413rR3R3dvvgJzIpCLy2qiQR/xujrGvs="

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/1fea29525e8b929dd7c7
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false

matrix:
  include:
    # While we don't support 3.6 by building wheels,
    # We will continue to build Python 3.6 as a proxy to PyPy support
    - os: linux
      python: 3.6
      stage: Comprehensive tests
      env: OPTIONAL_DEPS=0 BUILD_DOCS=0 INSTALL_FROM_SDIST=0
    - os: linux
      python: 3.7
      stage: Comprehensive tests
      env: OPTIONAL_DEPS=1 WITH_PYSIDE=1 BUILD_DOCS=1 INSTALL_FROM_SDIST=1
    - os: linux
      python: 3.7
      stage: Comprehensive tests
      env: QT=PyQt5 MINIMUM_REQUIREMENTS=1
    - os: linux
      python: 3.7
      stage: Comprehensive tests
      env: PYTHONOPTIMIZE=2 BUILD_DOCS=0 TEST_EXAMPLES=0
    - os: linux
      python: 3.7
      stage: Comprehensive tests
      env: QT=PyQt5 OPTIONAL_DEPS=1 MINIMUM_REQUIREMENTS=1
    - os: linux
      python: 3.8
      stage: Comprehensive tests
      env: QT=PyQt5 OPTIONAL_DEPS=1 BUILD_DOCS=1 DEPLOY_DOCS=1
    - os: linux
      python: 3.8
      stage: Comprehensive tests
      # Testing and installing from sdist will ensure that tests do not
      # depend on pooch to pass
      # pooch is used as an optional dependency to download datasets on the fly
      # users installing scikit-image in development mode do not require
      # pooch to run the tests
      env: INSTALL_FROM_SDIST=1
    - os: linux
      python: 3.8
      stage: Comprehensive tests
      env: QT=PyQt5 OPTIONAL_DEPS=1 BUILD_DOCS=1
    - os: linux
      python: 3.9
      stage: Initial tests
      env: QT=PyQt5 OPTIONAL_DEPS=1 BUILD_DOCS=1 EXTRA_DEPS=0
    - os: linux
      python: 3.8
      stage: Comprehensive tests
      env: QT=PyQt5 OPTIONAL_DEPS=1 PIP_FLAGS="--pre"
    # For smooth deployment, the osx_image here should match
    # what we set in the wheel generation travis images.
    # If not set, it will use the default version from Travis
    # https://docs.travis-ci.com/user/reference/osx/#xcode-version
    - os: osx
      osx_image: xcode9.4
      language: objective-c
      stage: Comprehensive tests
      env: MB_PYTHON_VERSION=3.7 TEST_EXAMPLES=0
    - os: osx
      osx_image: xcode9.4
      language: objective-c
      stage: Comprehensive tests
      env: MB_PYTHON_VERSION=3.8 OPTIONAL_DEPS=1 EXTRA_DEPS=0
    - os: osx
      osx_image: xcode9.4
      language: objective-c
      stage: Initial tests
      # As of 2020/11/19
      # Enough optional dependneices are missing
      # that trying to compile them all ourselves for Python 3.9
      # Makes us run out of time for OSX.
      env: MB_PYTHON_VERSION=3.9 OPTIONAL_DEPS=0 EXTRA_DEPS=0

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        source tools/travis/osx_install.sh;
      else
        virtualenv -p python ~/venv;
        source ~/venv/bin/activate;
      fi
    # ccache may not be installed on OSX. Ignore errors.
    - ccache --zero-stats || echo ccache not installed
    - export PATH=/usr/lib/ccache:${PATH}
    - source tools/travis/before_install.sh
    - which python; python --version
    - pip list
    - tools/build_versions.py
    - python setup.py sdist
    - SDIST_NAME=dist/`python setup.py --fullname`.tar.gz
    - tools/check_sdist.py $SDIST_NAME

install:
    - ccache --show-stats
    # Test installing without cython using the sdist
    # --no-build-isolation ensures even in the presense of a pyproject.toml
    # pip will not create a virtual environment, just for building the package
    # This is problematic because the version of numpy of that virtual environment
    # may be higher than the version we want to test with.
    - if [[ $INSTALL_FROM_SDIST ]]; then
        pip uninstall cython -y;
        pip install dist/scikit-image-*.tar.gz;
      else
        pip install -vv --no-build-isolation -e .;
      fi
    # ^^^^ installing in editable mode avoids redownloading the test datasets
    # using pooch as our code automatically checks for the data being
    # stored in directories adjacent to the source.
    #
    # installing from SDIST will force the use of pooch as a downloading
    # backend to test the pooch functionality
    # Install testing requirements
    - pip install $PIP_FLAGS -r requirements/test.txt
    # Matplotlib settings - do not show figures during doc examples
    - export MPL_DIR=`python -c 'import matplotlib; print(matplotlib.get_configdir())'`
    - mkdir -p ${MPL_DIR}
    - touch ${MPL_DIR}/matplotlibrc
    # Install most of the optional packages
    - |
      if [[ "${OPTIONAL_DEPS}" == "1" ]]; then
        pip install -r ./requirements/optional.txt $WHEELHOUSE
        if [[ "${EXTRA_DEPS}" != "0" ]]; then
          # Extra deps need compilation, and it may not always be possible to
          # compile them easily on all platforms
          pip install -r ./requirements/extras.txt $WHEELHOUSE
        fi
      fi
    - tools/travis/install_qt.sh

script: tools/travis/script.sh

after_success:
    - codecov
